#!Nsis Installer Command Script
#
# The following external defines are recognized:
# ${VERSION} = YYYYMMDD
# ${BIT}     = 32 or 64
# ${LIBGCC}  = name of libgcc dll file to use
# ${MINGW}   = <path to mingw windows dlls>

!include "MUI2.nsh"
!include "FileAssociation.nsh"
!include "FileFunc.nsh"

!define MUI_ICON "lammps.ico"
!define MUI_UNICON "lammps.ico"
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "lammps-text-logo-wide.bmp"
!define MUI_HEADERIMAGE_RIGHT

Unicode true
XPStyle on

!include "LogicLib.nsh"
!addplugindir "envvar/Plugins/x86-unicode"
!include "x64.nsh"

RequestExecutionLevel user

!macro VerifyUserIsAdmin
UserInfo::GetAccountType
pop $0
${If} $0 != "admin"
  messageBox mb_iconstop "Administrator rights required!"
  setErrorLevel 740 ;ERROR_ELEVATION_REQUIRED
  quit
${EndIf}
!macroend

!macro CreateInternetShortcut FILENAME URL ICONFILE ICONINDEX
WriteINIStr "${FILENAME}.url" "InternetShortcut" "URL" "${URL}"
WriteINIStr "${FILENAME}.url" "InternetShortcut" "IconFile" "${ICONFILE}"
WriteINIStr "${FILENAME}.url" "InternetShortcut" "IconIndex" "${ICONINDEX}"
!macroend

!define LAMMPS "LAMMPS ${BIT}-bit ${VERSION}"
OutFile "../LAMMPS-${BIT}bit-${VERSION}.exe"

Name "${LAMMPS}"
!if ${BIT} == 64
InstallDir "$LOCALAPPDATA\${LAMMPS}"
!define MPICHDIR "$ProgramFiles64\MPICH2\bin"
!else
InstallDir "$LOCALAPPDATA\${LAMMPS}"
!define MPICHDIR "$ProgramFiles\MPICH2\bin"
!endif

ShowInstDetails show
ShowUninstDetails show
SetCompressor zlib

!define MUI_ABORTWARNING

!insertmacro MUI_PAGE_LICENSE "./LICENSE.txt"
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

!insertmacro MUI_LANGUAGE "English"

function .onInit
  # Determine if LAMMPS was already installed and check whether it was in 32-bit
  # or 64-bit. Then look up path to uninstaller and offer to uninstall or quit
  SetRegView 32
  ReadRegDWORD $0 HKCU "Software\LAMMPS" "Bits"
  SetRegView LastUsed
  ${If} $0 == "32"
    SetRegView 32
  ${ElseIf} $0 == "64"
    SetRegView 64
  ${Else}
    SetRegView ${BIT}
  ${EndIf}
  ClearErrors
  ReadRegStr $R0 HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" "UninstallString"
  SetRegView LastUsed
  ${If} ${Errors}
    DetailPrint "LAMMPS not (yet) installed"
  ${Else}
    MessageBox MB_YESNO "LAMMPS ($0 bit) is already installed. Uninstall existing version?" /SD IDYES IDNO Quit
      Pop $R1
      StrCmp $R1 2 Quit +1
      Exec $R0
    Quit:
      Quit
  ${EndIf}
  setShellVarContext all
functionEnd

Section "${LAMMPS}" SecLammps
  SectionIn RO
  # Write LAMMPS installation bitness marker. Always use 32-bit registry view
  SetRegView 32
  IntFmt $0 "0x%08X" ${BIT}
  WriteRegDWORD HKCU "Software\LAMMPS" "Bits" $0

  # Switch to "native" registry view
  SetRegView ${BIT}
  SetShellVarContext current

  CreateDirectory "$SMPROGRAMS\${LAMMPS}"
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\Uninstall.lnk"      "$INSTDIR\Uninstall.exe"          "" ""
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\README.lnk"         "$INSTDIR\README.txt"             "" ""
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\LAMMPS Manual.lnk"  "$INSTDIR\doc\LAMMPS-Manual.pdf"  "" ""
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\Manuals.lnk"        "$WINDIR\explorer.exe"  \
                                                     '/e,"$INSTDIR\Doc"'  ""
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\Benchmarks.lnk"     "$WINDIR\explorer.exe"  \
                                                     '/e,"$INSTDIR\Benchmarks"'  ""
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\Examples.lnk"       "$WINDIR\explorer.exe"    \
                                                     '/e,"$INSTDIR\Examples"'    ""
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\LICENSE.lnk"        "$INSTDIR\LICENSE.txt"            "" ""

!insertmacro CreateInternetShortcut "$SMPROGRAMS\${LAMMPS}\LAMMPS WWW Site" \
                  "https://www.lammps.org" "" "0"
!insertmacro CreateInternetShortcut "$SMPROGRAMS\${LAMMPS}\LAMMPS Commands" \
                  "https://docs.lammps.org/Commands_all.html" "" "0"

  SetOutPath "$INSTDIR"
  CreateDirectory "$INSTDIR\bin"
  CreateDirectory "$INSTDIR\Doc"
  CreateDirectory "$INSTDIR\Benchmarks"
  CreateDirectory "$INSTDIR\Examples"
  CreateDirectory "$INSTDIR\Potentials"
  CreateDirectory "$INSTDIR\Python"
  CreateDirectory "$INSTDIR\frc_files"
  CreateDirectory "$INSTDIR\plugins"

  File License.txt
  File README.txt
  File lammps.ico

  SetOutPath "$INSTDIR\bin"
  File ${MINGW}/libgcc_s*.dll
  File ${MINGW}/libfftw3-3.dll
  File ${MINGW}/libgfortran-5.dll
  File ${MINGW}/libgomp-1.dll
  File ${MINGW}/libhistory8.dll
  File ${MINGW}/libjpeg-62.dll
  File ${MINGW}/libpng16-16.dll
  File ${MINGW}/libquadmath-0.dll
  File ${MINGW}/libreadline8.dll
  File ${MINGW}/libssp-0.dll
  File ${MINGW}/libstdc++-6.dll
  File ${MINGW}/libtermcap-0.dll
  File ${MINGW}/libwinpthread-1.dll
  File ${MINGW}/libbz2-1.dll
  File ${MINGW}/libzstd.dll
  File ${MINGW}/zlib1.dll

  File *.exe
  File *.dll

  SetOutPath "$INSTDIR\Doc"
  File *.pdf

  SetOutPath "$INSTDIR\Potentials"
  File potentials/*

  SetOutPath "$INSTDIR\Examples"
  File /r /x log.*.4 examples/*

  SetOutPath "$INSTDIR\frc_files"
  File /oname=README-msi2lmp.txt tools/msi2lmp/README.txt
  File /r tools/msi2lmp/frc_files/*

  SetOutPath "$INSTDIR\Benchmarks"
  File /r /x log.*.4 bench/*

  SetOutPath "$INSTDIR\Python"
  File /r /x __pycache__ /x *.pyc python/lammps

  SetOutPath "$INSTDIR\plugins"
  File plugins/helloplugin.so

  SetOutPath "$INSTDIR"
  ${registerExtension} "$INSTDIR\bin\lammps-shell.exe" ".lmp" "LAMMPS Input File"

  # Register Application and its uninstaller
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "DisplayName" "${LAMMPS} -- MD Simulation Software"
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "Publisher" "The LAMMPS Developers"
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "URLInfoAbout" "lammps.org"
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "DisplayIcon" "$INSTDIR\lammps.ico"
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "DisplayVersion" "${VERSION}"
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "InstallLocation" "$INSTDIR"
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
  WriteRegStr HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "QuietUninstallString" "$\"$INSTDIR\uninstall.exe$\" /S"

  ${GetSize} "$INSTDIR" "/S=0K" $0 $1 $2
  IntFmt $0 "0x%08X" $0
  WriteRegDWORD HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS" \
                 "EstimatedSize" "$0"

  # update path variables
  EnVar::SetHKCU
  # add MPICH2 path
  EnVar::AddValue "PATH" "${MPICHDIR}"
  # add LAMMPS executable path
  EnVar::AddValue "PATH" "$INSTDIR\bin"
  # add Potentials folder to LAMMPS_POTENTIALS
  EnVar::AddValue "LAMMPS_POTENTIALS" "$INSTDIR\Potentials"
  # add msi2lmp force fields
  EnVar::AddValue "MSI2LMP_LIBRARY" "$INSTDIR\frc_files"
  # add LAMMPS python module to Python search path
  EnVar::AddValue "PYTHONPATH" "$INSTDIR\Python"
  # add LAMMPS plugin folder to plugin search path
  EnVar::AddValue "LAMMPS_PLUGIN_PATH" "$INSTDIR\plugins"
  # record installation folder in LAMMPSHOME
  EnVar::Delete LAMMPSHOME
  EnVar::AddValue LAMMPSHOME "$INSTDIR"

  WriteUninstaller "$INSTDIR\Uninstall.exe"

  # Launch LAMMPS shell in the user's personal documents folder (not elegant or clean but seems to work)
  SetOutPath "$DOCUMENTS"
  CreateShortCut  "$SMPROGRAMS\${LAMMPS}\LAMMPS-Shell.lnk"          "$WINDIR\system32\cmd.exe"       \
                  '/c "$INSTDIR\Bin\lammps-shell.exe"' "$INSTDIR\lammps.ico"  "" SW_SHOWNORMAL "" "The LAMMPS Shell"
SectionEnd

function un.onInit
  SetShellVarContext current
functionEnd

Section "Uninstall"
  # remove LAMMPS bitness/installation indicator always in 32-bit registry view
  SetRegView 32
  DeleteRegKey HKCU "Software\LAMMPS"

  # unregister extension, and uninstall info
  SetRegView ${BIT}
  SetShellVarContext current
  ${unregisterExtension} ".lmp" "LAMMPS Input File"
  # unregister installation
  DeleteRegKey HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\LAMMPS"

  # update path variables
  EnVar::SetHKCU
  # remove MPICH2 path
  EnVar::DeleteValue "PATH" "${MPICHDIR}"
  # remove LAMMPS executable and dll path
  EnVar::DeleteValue "PATH" "$INSTDIR\bin"
  # remove Potentials environment from LAMMPS_POTENTIALS
  EnVar::Delete "LAMMPS_POTENTIALS"
  # remove msi2lmp force field variable
  EnVar::Delete "MSI2LMP_LIBRARY"
  # remove LAMMPS python module from search path
  EnVar::DeleteValue "PYTHONPATH" "$INSTDIR\Python"
  # remove LAMMPS bundled plugins from search path
  EnVar::DeleteValue "LAMMPS_PLUGIN_PATH" "$INSTDIR\plugins"
  # remove definition of installation location
  EnVar::Delete "LAMMPSHOME"

  RMDir /r "$SMPROGRAMS\${LAMMPS}"

  Delete /REBOOTOK   "$INSTDIR\*.txt"
  Delete /REBOOTOK   "$INSTDIR\*.ico"
  Delete /REBOOTOK   "$INSTDIR\Uninstall.exe"
  RMDir /r /REBOOTOK "$INSTDIR\bin"
  RMDir /r /REBOOTOK "$INSTDIR\Benchmarks"
  RMDir /r /REBOOTOK "$INSTDIR\Doc"
  RMDir /r /REBOOTOK "$INSTDIR\Examples"
  RMDir /r /REBOOTOK "$INSTDIR\Potentials"
  RMDir /r /REBOOTOK "$INSTDIR\Python"
  RMDir /r /REBOOTOK "$INSTDIR\frc_files"
  RMDir /r /REBOOTOK "$INSTDIR\plugins"
  RMDir /REBOOTOK "$INSTDIR"
SectionEnd

# Local Variables:
# mode: sh
# End:
